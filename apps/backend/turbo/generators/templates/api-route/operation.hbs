import { type Static, Type } from "@sinclair/typebox";
import { TypeRef } from "@/types";
import type { FastifyInstance, FastifyReply, FastifyRequest } from "fastify";
{{#ifEquals methodType "GET" }}{{set "responseCode" 200 }}{{/ifEquals}}{{#ifEquals methodType "POST" }}{{set "responseCode" 200 }}{{/ifEquals}}{{#ifEquals methodType "PUT" }}{{set "responseCode" 201 }}{{/ifEquals}}{{#ifEquals methodType "DELETE" }}{{set "responseCode" 204 }}{{/ifEquals}}
const {{ properCase operationName }}RequestSchema = Type.Object(
  {
    description: Type.String({
      description: "Define your request body here",
    }),
  },
  { $id: "{{ properCase operationName }}Request" },
);

export type {{ properCase operationName }}Request = Static<typeof {{ properCase operationName }}RequestSchema>;

const {{ properCase operationName }}ResponseSchema = Type.Object(
  {
    id: Type.Number({
      description: "Define your response body here",
    }),
  },
  { $id: "{{ properCase operationName }}Response" },
);

export type {{ properCase operationName }}Response = Static<typeof {{ properCase operationName }}ResponseSchema>;

export async function {{ operationName }}Route(fastify: FastifyInstance) {
  fastify.addSchema({{ properCase operationName }}RequestSchema);
  fastify.addSchema({{ properCase operationName }}ResponseSchema);

  const routeOpts = {
    schema: {
      operationId: "{{ operationName }}",
      tags: ["{{ routeResource }}"],
      description: "Add your route description here",
      body: TypeRef({{ properCase operationName }}RequestSchema),
      response: {
        "{{ responseCode }}": TypeRef({{ properCase operationName }}ResponseSchema),
      },
    },
  }

  fastify.{{ lowerCase methodType }}("{{ routePath }}", routeOpts, {{ operationName }}Controller);
}

export async function {{ operationName }}Controller(
  request: FastifyRequest<{
    Body: {{ properCase operationName }}Request;
  }>,
  reply: FastifyReply,
) {
  const { description } = request.body;

  const response: {{ properCase operationName }}Response = {
    id: 1,
  };

  reply.status({{ responseCode }}).send(response);
}
